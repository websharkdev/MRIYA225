/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/airplane/model.glb 
*/

import React, { useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const HELIX_SPEED = 6

export function Airplane(props) {
  const { nodes, materials } = useGLTF("./models/airplane/model.glb");
  const helixREF = useRef() 

  
  const speedMaterial = useRef();
  const scroll = useScroll();
  const lastScroll = useRef(0);

  useFrame((state, delta) => {
    if (scroll.offset - lastScroll.current > 0.0005) {
      helixREF.current.rotation.x += delta * HELIX_SPEED * 10
    }
    lastScroll.current = scroll.offset;
    
    helixREF.current.rotation.x += delta * HELIX_SPEED;
  })
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.PUSHILIN_Plane_Circle000.geometry}
        // material={materials.plane}
      >
        <meshStandardMaterial color='white'/>
      </mesh>
      <mesh
        ref={helixREF}
        geometry={nodes.PUSHILIN_Plane_Helix.geometry}
        material={materials.plane}
        position={[1.09, 0.23, 0]}
      >
        <meshStandardMaterial color='white'/>
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/airplane/model.glb");
